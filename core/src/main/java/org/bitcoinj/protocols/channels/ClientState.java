// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: storedclientpaymentchannel.proto

package org.bitcoinj.protocols.channels;

public final class ClientState {
  private ClientState() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface StoredClientPaymentChannelsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:paymentchannels.StoredClientPaymentChannels)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
     */
    java.util.List<org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel> 
        getChannelsList();
    /**
     * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
     */
    org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel getChannels(int index);
    /**
     * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
     */
    int getChannelsCount();
  }
  /**
   * <pre>
   * A set of StoredPaymentChannel's
   * </pre>
   *
   * Protobuf type {@code paymentchannels.StoredClientPaymentChannels}
   */
  public  static final class StoredClientPaymentChannels extends
      com.google.protobuf.GeneratedMessageLite<
          StoredClientPaymentChannels, StoredClientPaymentChannels.Builder> implements
      // @@protoc_insertion_point(message_implements:paymentchannels.StoredClientPaymentChannels)
      StoredClientPaymentChannelsOrBuilder {
    private StoredClientPaymentChannels() {
      channels_ = emptyProtobufList();
    }
    public static final int CHANNELS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel> channels_;
    /**
     * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel> getChannelsList() {
      return channels_;
    }
    /**
     * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
     */
    public java.util.List<? extends org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannelOrBuilder> 
        getChannelsOrBuilderList() {
      return channels_;
    }
    /**
     * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
     */
    @java.lang.Override
    public int getChannelsCount() {
      return channels_.size();
    }
    /**
     * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
     */
    @java.lang.Override
    public org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel getChannels(int index) {
      return channels_.get(index);
    }
    /**
     * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
     */
    public org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannelOrBuilder getChannelsOrBuilder(
        int index) {
      return channels_.get(index);
    }
    private void ensureChannelsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel> tmp = channels_;
      if (!tmp.isModifiable()) {
        channels_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
     */
    private void setChannels(
        int index, org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel value) {
      value.getClass();
  ensureChannelsIsMutable();
      channels_.set(index, value);
    }
    /**
     * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
     */
    private void addChannels(org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel value) {
      value.getClass();
  ensureChannelsIsMutable();
      channels_.add(value);
    }
    /**
     * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
     */
    private void addChannels(
        int index, org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel value) {
      value.getClass();
  ensureChannelsIsMutable();
      channels_.add(index, value);
    }
    /**
     * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
     */
    private void addAllChannels(
        java.lang.Iterable<? extends org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel> values) {
      ensureChannelsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, channels_);
    }
    /**
     * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
     */
    private void clearChannels() {
      channels_ = emptyProtobufList();
    }
    /**
     * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
     */
    private void removeChannels(int index) {
      ensureChannelsIsMutable();
      channels_.remove(index);
    }

    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A set of StoredPaymentChannel's
     * </pre>
     *
     * Protobuf type {@code paymentchannels.StoredClientPaymentChannels}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels, Builder> implements
        // @@protoc_insertion_point(builder_implements:paymentchannels.StoredClientPaymentChannels)
        org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannelsOrBuilder {
      // Construct using org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
       */
      @java.lang.Override
      public java.util.List<org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel> getChannelsList() {
        return java.util.Collections.unmodifiableList(
            instance.getChannelsList());
      }
      /**
       * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
       */
      @java.lang.Override
      public int getChannelsCount() {
        return instance.getChannelsCount();
      }/**
       * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
       */
      @java.lang.Override
      public org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel getChannels(int index) {
        return instance.getChannels(index);
      }
      /**
       * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
       */
      public Builder setChannels(
          int index, org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel value) {
        copyOnWrite();
        instance.setChannels(index, value);
        return this;
      }
      /**
       * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
       */
      public Builder setChannels(
          int index, org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel.Builder builderForValue) {
        copyOnWrite();
        instance.setChannels(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
       */
      public Builder addChannels(org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel value) {
        copyOnWrite();
        instance.addChannels(value);
        return this;
      }
      /**
       * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
       */
      public Builder addChannels(
          int index, org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel value) {
        copyOnWrite();
        instance.addChannels(index, value);
        return this;
      }
      /**
       * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
       */
      public Builder addChannels(
          org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel.Builder builderForValue) {
        copyOnWrite();
        instance.addChannels(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
       */
      public Builder addChannels(
          int index, org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel.Builder builderForValue) {
        copyOnWrite();
        instance.addChannels(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
       */
      public Builder addAllChannels(
          java.lang.Iterable<? extends org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel> values) {
        copyOnWrite();
        instance.addAllChannels(values);
        return this;
      }
      /**
       * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
       */
      public Builder clearChannels() {
        copyOnWrite();
        instance.clearChannels();
        return this;
      }
      /**
       * <code>repeated .paymentchannels.StoredClientPaymentChannel channels = 1;</code>
       */
      public Builder removeChannels(int index) {
        copyOnWrite();
        instance.removeChannels(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.StoredClientPaymentChannels)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "channels_",
              org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel.class,
            };
            java.lang.String info =
                "\u0001\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0001\u0001\u0001\u041b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels> parser = PARSER;
          if (parser == null) {
            synchronized (org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:paymentchannels.StoredClientPaymentChannels)
    private static final org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels DEFAULT_INSTANCE;
    static {
      StoredClientPaymentChannels defaultInstance = new StoredClientPaymentChannels();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        StoredClientPaymentChannels.class, defaultInstance);
    }

    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannels getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StoredClientPaymentChannels> PARSER;

    public static com.google.protobuf.Parser<StoredClientPaymentChannels> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StoredClientPaymentChannelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:paymentchannels.StoredClientPaymentChannel)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required bytes id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <code>required bytes id = 1;</code>
     * @return The id.
     */
    com.google.protobuf.ByteString getId();

    /**
     * <code>required bytes contractTransaction = 2;</code>
     * @return Whether the contractTransaction field is set.
     */
    boolean hasContractTransaction();
    /**
     * <code>required bytes contractTransaction = 2;</code>
     * @return The contractTransaction.
     */
    com.google.protobuf.ByteString getContractTransaction();

    /**
     * <code>required bytes refundTransaction = 3;</code>
     * @return Whether the refundTransaction field is set.
     */
    boolean hasRefundTransaction();
    /**
     * <code>required bytes refundTransaction = 3;</code>
     * @return The refundTransaction.
     */
    com.google.protobuf.ByteString getRefundTransaction();

    /**
     * <code>required bytes myPublicKey = 8;</code>
     * @return Whether the myPublicKey field is set.
     */
    boolean hasMyPublicKey();
    /**
     * <code>required bytes myPublicKey = 8;</code>
     * @return The myPublicKey.
     */
    com.google.protobuf.ByteString getMyPublicKey();

    /**
     * <pre>
     * Deprecated, key is already stored in the wallet, and found using myPublicKey;
     * </pre>
     *
     * <code>required bytes myKey = 4;</code>
     * @return Whether the myKey field is set.
     */
    boolean hasMyKey();
    /**
     * <pre>
     * Deprecated, key is already stored in the wallet, and found using myPublicKey;
     * </pre>
     *
     * <code>required bytes myKey = 4;</code>
     * @return The myKey.
     */
    com.google.protobuf.ByteString getMyKey();

    /**
     * <code>required uint64 valueToMe = 5;</code>
     * @return Whether the valueToMe field is set.
     */
    boolean hasValueToMe();
    /**
     * <code>required uint64 valueToMe = 5;</code>
     * @return The valueToMe.
     */
    long getValueToMe();

    /**
     * <pre>
     * Fees required to refund the transaction.
     * </pre>
     *
     * <code>required uint64 refundFees = 6;</code>
     * @return Whether the refundFees field is set.
     */
    boolean hasRefundFees();
    /**
     * <pre>
     * Fees required to refund the transaction.
     * </pre>
     *
     * <code>required uint64 refundFees = 6;</code>
     * @return The refundFees.
     */
    long getRefundFees();

    /**
     * <pre>
     * When set, the hash of the transaction that was presented by the server for closure of the channel.
     * It spends the contractTransaction and is expected to be broadcast to the network by the server.
     * It's supposed to be in the wallet already.
     * </pre>
     *
     * <code>optional bytes closeTransactionHash = 7;</code>
     * @return Whether the closeTransactionHash field is set.
     */
    boolean hasCloseTransactionHash();
    /**
     * <pre>
     * When set, the hash of the transaction that was presented by the server for closure of the channel.
     * It spends the contractTransaction and is expected to be broadcast to the network by the server.
     * It's supposed to be in the wallet already.
     * </pre>
     *
     * <code>optional bytes closeTransactionHash = 7;</code>
     * @return The closeTransactionHash.
     */
    com.google.protobuf.ByteString getCloseTransactionHash();

    /**
     * <code>optional uint32 majorVersion = 9 [default = 1];</code>
     * @return Whether the majorVersion field is set.
     */
    boolean hasMajorVersion();
    /**
     * <code>optional uint32 majorVersion = 9 [default = 1];</code>
     * @return The majorVersion.
     */
    int getMajorVersion();

    /**
     * <pre>
     * The expiry time of the CLTV lock. Only used in protocol v2.
     * </pre>
     *
     * <code>optional uint64 expiryTime = 10;</code>
     * @return Whether the expiryTime field is set.
     */
    boolean hasExpiryTime();
    /**
     * <pre>
     * The expiry time of the CLTV lock. Only used in protocol v2.
     * </pre>
     *
     * <code>optional uint64 expiryTime = 10;</code>
     * @return The expiryTime.
     */
    long getExpiryTime();

    /**
     * <pre>
     * The server's public key. Only used in protocol v2.
     * </pre>
     *
     * <code>optional bytes serverKey = 11;</code>
     * @return Whether the serverKey field is set.
     */
    boolean hasServerKey();
    /**
     * <pre>
     * The server's public key. Only used in protocol v2.
     * </pre>
     *
     * <code>optional bytes serverKey = 11;</code>
     * @return The serverKey.
     */
    com.google.protobuf.ByteString getServerKey();
  }
  /**
   * <pre>
   * A client-side payment channel in serialized form, which can be reloaded later if the client restarts and wants to
   * reopen an existing channel
   * </pre>
   *
   * Protobuf type {@code paymentchannels.StoredClientPaymentChannel}
   */
  public  static final class StoredClientPaymentChannel extends
      com.google.protobuf.GeneratedMessageLite<
          StoredClientPaymentChannel, StoredClientPaymentChannel.Builder> implements
      // @@protoc_insertion_point(message_implements:paymentchannels.StoredClientPaymentChannel)
      StoredClientPaymentChannelOrBuilder {
    private StoredClientPaymentChannel() {
      id_ = com.google.protobuf.ByteString.EMPTY;
      contractTransaction_ = com.google.protobuf.ByteString.EMPTY;
      refundTransaction_ = com.google.protobuf.ByteString.EMPTY;
      myPublicKey_ = com.google.protobuf.ByteString.EMPTY;
      myKey_ = com.google.protobuf.ByteString.EMPTY;
      closeTransactionHash_ = com.google.protobuf.ByteString.EMPTY;
      majorVersion_ = 1;
      serverKey_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString id_;
    /**
     * <code>required bytes id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required bytes id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getId() {
      return id_;
    }
    /**
     * <code>required bytes id = 1;</code>
     * @param value The id to set.
     */
    private void setId(com.google.protobuf.ByteString value) {
      value.getClass();
  bitField0_ |= 0x00000001;
      id_ = value;
    }
    /**
     * <code>required bytes id = 1;</code>
     */
    private void clearId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      id_ = getDefaultInstance().getId();
    }

    public static final int CONTRACTTRANSACTION_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString contractTransaction_;
    /**
     * <code>required bytes contractTransaction = 2;</code>
     * @return Whether the contractTransaction field is set.
     */
    @java.lang.Override
    public boolean hasContractTransaction() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required bytes contractTransaction = 2;</code>
     * @return The contractTransaction.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getContractTransaction() {
      return contractTransaction_;
    }
    /**
     * <code>required bytes contractTransaction = 2;</code>
     * @param value The contractTransaction to set.
     */
    private void setContractTransaction(com.google.protobuf.ByteString value) {
      value.getClass();
  bitField0_ |= 0x00000002;
      contractTransaction_ = value;
    }
    /**
     * <code>required bytes contractTransaction = 2;</code>
     */
    private void clearContractTransaction() {
      bitField0_ = (bitField0_ & ~0x00000002);
      contractTransaction_ = getDefaultInstance().getContractTransaction();
    }

    public static final int REFUNDTRANSACTION_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString refundTransaction_;
    /**
     * <code>required bytes refundTransaction = 3;</code>
     * @return Whether the refundTransaction field is set.
     */
    @java.lang.Override
    public boolean hasRefundTransaction() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required bytes refundTransaction = 3;</code>
     * @return The refundTransaction.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRefundTransaction() {
      return refundTransaction_;
    }
    /**
     * <code>required bytes refundTransaction = 3;</code>
     * @param value The refundTransaction to set.
     */
    private void setRefundTransaction(com.google.protobuf.ByteString value) {
      value.getClass();
  bitField0_ |= 0x00000004;
      refundTransaction_ = value;
    }
    /**
     * <code>required bytes refundTransaction = 3;</code>
     */
    private void clearRefundTransaction() {
      bitField0_ = (bitField0_ & ~0x00000004);
      refundTransaction_ = getDefaultInstance().getRefundTransaction();
    }

    public static final int MYPUBLICKEY_FIELD_NUMBER = 8;
    private com.google.protobuf.ByteString myPublicKey_;
    /**
     * <code>required bytes myPublicKey = 8;</code>
     * @return Whether the myPublicKey field is set.
     */
    @java.lang.Override
    public boolean hasMyPublicKey() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>required bytes myPublicKey = 8;</code>
     * @return The myPublicKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMyPublicKey() {
      return myPublicKey_;
    }
    /**
     * <code>required bytes myPublicKey = 8;</code>
     * @param value The myPublicKey to set.
     */
    private void setMyPublicKey(com.google.protobuf.ByteString value) {
      value.getClass();
  bitField0_ |= 0x00000008;
      myPublicKey_ = value;
    }
    /**
     * <code>required bytes myPublicKey = 8;</code>
     */
    private void clearMyPublicKey() {
      bitField0_ = (bitField0_ & ~0x00000008);
      myPublicKey_ = getDefaultInstance().getMyPublicKey();
    }

    public static final int MYKEY_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString myKey_;
    /**
     * <pre>
     * Deprecated, key is already stored in the wallet, and found using myPublicKey;
     * </pre>
     *
     * <code>required bytes myKey = 4;</code>
     * @return Whether the myKey field is set.
     */
    @java.lang.Override
    public boolean hasMyKey() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Deprecated, key is already stored in the wallet, and found using myPublicKey;
     * </pre>
     *
     * <code>required bytes myKey = 4;</code>
     * @return The myKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMyKey() {
      return myKey_;
    }
    /**
     * <pre>
     * Deprecated, key is already stored in the wallet, and found using myPublicKey;
     * </pre>
     *
     * <code>required bytes myKey = 4;</code>
     * @param value The myKey to set.
     */
    private void setMyKey(com.google.protobuf.ByteString value) {
      value.getClass();
  bitField0_ |= 0x00000010;
      myKey_ = value;
    }
    /**
     * <pre>
     * Deprecated, key is already stored in the wallet, and found using myPublicKey;
     * </pre>
     *
     * <code>required bytes myKey = 4;</code>
     */
    private void clearMyKey() {
      bitField0_ = (bitField0_ & ~0x00000010);
      myKey_ = getDefaultInstance().getMyKey();
    }

    public static final int VALUETOME_FIELD_NUMBER = 5;
    private long valueToMe_;
    /**
     * <code>required uint64 valueToMe = 5;</code>
     * @return Whether the valueToMe field is set.
     */
    @java.lang.Override
    public boolean hasValueToMe() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>required uint64 valueToMe = 5;</code>
     * @return The valueToMe.
     */
    @java.lang.Override
    public long getValueToMe() {
      return valueToMe_;
    }
    /**
     * <code>required uint64 valueToMe = 5;</code>
     * @param value The valueToMe to set.
     */
    private void setValueToMe(long value) {
      bitField0_ |= 0x00000020;
      valueToMe_ = value;
    }
    /**
     * <code>required uint64 valueToMe = 5;</code>
     */
    private void clearValueToMe() {
      bitField0_ = (bitField0_ & ~0x00000020);
      valueToMe_ = 0L;
    }

    public static final int REFUNDFEES_FIELD_NUMBER = 6;
    private long refundFees_;
    /**
     * <pre>
     * Fees required to refund the transaction.
     * </pre>
     *
     * <code>required uint64 refundFees = 6;</code>
     * @return Whether the refundFees field is set.
     */
    @java.lang.Override
    public boolean hasRefundFees() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Fees required to refund the transaction.
     * </pre>
     *
     * <code>required uint64 refundFees = 6;</code>
     * @return The refundFees.
     */
    @java.lang.Override
    public long getRefundFees() {
      return refundFees_;
    }
    /**
     * <pre>
     * Fees required to refund the transaction.
     * </pre>
     *
     * <code>required uint64 refundFees = 6;</code>
     * @param value The refundFees to set.
     */
    private void setRefundFees(long value) {
      bitField0_ |= 0x00000040;
      refundFees_ = value;
    }
    /**
     * <pre>
     * Fees required to refund the transaction.
     * </pre>
     *
     * <code>required uint64 refundFees = 6;</code>
     */
    private void clearRefundFees() {
      bitField0_ = (bitField0_ & ~0x00000040);
      refundFees_ = 0L;
    }

    public static final int CLOSETRANSACTIONHASH_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString closeTransactionHash_;
    /**
     * <pre>
     * When set, the hash of the transaction that was presented by the server for closure of the channel.
     * It spends the contractTransaction and is expected to be broadcast to the network by the server.
     * It's supposed to be in the wallet already.
     * </pre>
     *
     * <code>optional bytes closeTransactionHash = 7;</code>
     * @return Whether the closeTransactionHash field is set.
     */
    @java.lang.Override
    public boolean hasCloseTransactionHash() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * When set, the hash of the transaction that was presented by the server for closure of the channel.
     * It spends the contractTransaction and is expected to be broadcast to the network by the server.
     * It's supposed to be in the wallet already.
     * </pre>
     *
     * <code>optional bytes closeTransactionHash = 7;</code>
     * @return The closeTransactionHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCloseTransactionHash() {
      return closeTransactionHash_;
    }
    /**
     * <pre>
     * When set, the hash of the transaction that was presented by the server for closure of the channel.
     * It spends the contractTransaction and is expected to be broadcast to the network by the server.
     * It's supposed to be in the wallet already.
     * </pre>
     *
     * <code>optional bytes closeTransactionHash = 7;</code>
     * @param value The closeTransactionHash to set.
     */
    private void setCloseTransactionHash(com.google.protobuf.ByteString value) {
      value.getClass();
  bitField0_ |= 0x00000080;
      closeTransactionHash_ = value;
    }
    /**
     * <pre>
     * When set, the hash of the transaction that was presented by the server for closure of the channel.
     * It spends the contractTransaction and is expected to be broadcast to the network by the server.
     * It's supposed to be in the wallet already.
     * </pre>
     *
     * <code>optional bytes closeTransactionHash = 7;</code>
     */
    private void clearCloseTransactionHash() {
      bitField0_ = (bitField0_ & ~0x00000080);
      closeTransactionHash_ = getDefaultInstance().getCloseTransactionHash();
    }

    public static final int MAJORVERSION_FIELD_NUMBER = 9;
    private int majorVersion_;
    /**
     * <code>optional uint32 majorVersion = 9 [default = 1];</code>
     * @return Whether the majorVersion field is set.
     */
    @java.lang.Override
    public boolean hasMajorVersion() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional uint32 majorVersion = 9 [default = 1];</code>
     * @return The majorVersion.
     */
    @java.lang.Override
    public int getMajorVersion() {
      return majorVersion_;
    }
    /**
     * <code>optional uint32 majorVersion = 9 [default = 1];</code>
     * @param value The majorVersion to set.
     */
    private void setMajorVersion(int value) {
      bitField0_ |= 0x00000100;
      majorVersion_ = value;
    }
    /**
     * <code>optional uint32 majorVersion = 9 [default = 1];</code>
     */
    private void clearMajorVersion() {
      bitField0_ = (bitField0_ & ~0x00000100);
      majorVersion_ = 1;
    }

    public static final int EXPIRYTIME_FIELD_NUMBER = 10;
    private long expiryTime_;
    /**
     * <pre>
     * The expiry time of the CLTV lock. Only used in protocol v2.
     * </pre>
     *
     * <code>optional uint64 expiryTime = 10;</code>
     * @return Whether the expiryTime field is set.
     */
    @java.lang.Override
    public boolean hasExpiryTime() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * The expiry time of the CLTV lock. Only used in protocol v2.
     * </pre>
     *
     * <code>optional uint64 expiryTime = 10;</code>
     * @return The expiryTime.
     */
    @java.lang.Override
    public long getExpiryTime() {
      return expiryTime_;
    }
    /**
     * <pre>
     * The expiry time of the CLTV lock. Only used in protocol v2.
     * </pre>
     *
     * <code>optional uint64 expiryTime = 10;</code>
     * @param value The expiryTime to set.
     */
    private void setExpiryTime(long value) {
      bitField0_ |= 0x00000200;
      expiryTime_ = value;
    }
    /**
     * <pre>
     * The expiry time of the CLTV lock. Only used in protocol v2.
     * </pre>
     *
     * <code>optional uint64 expiryTime = 10;</code>
     */
    private void clearExpiryTime() {
      bitField0_ = (bitField0_ & ~0x00000200);
      expiryTime_ = 0L;
    }

    public static final int SERVERKEY_FIELD_NUMBER = 11;
    private com.google.protobuf.ByteString serverKey_;
    /**
     * <pre>
     * The server's public key. Only used in protocol v2.
     * </pre>
     *
     * <code>optional bytes serverKey = 11;</code>
     * @return Whether the serverKey field is set.
     */
    @java.lang.Override
    public boolean hasServerKey() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * The server's public key. Only used in protocol v2.
     * </pre>
     *
     * <code>optional bytes serverKey = 11;</code>
     * @return The serverKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getServerKey() {
      return serverKey_;
    }
    /**
     * <pre>
     * The server's public key. Only used in protocol v2.
     * </pre>
     *
     * <code>optional bytes serverKey = 11;</code>
     * @param value The serverKey to set.
     */
    private void setServerKey(com.google.protobuf.ByteString value) {
      value.getClass();
  bitField0_ |= 0x00000400;
      serverKey_ = value;
    }
    /**
     * <pre>
     * The server's public key. Only used in protocol v2.
     * </pre>
     *
     * <code>optional bytes serverKey = 11;</code>
     */
    private void clearServerKey() {
      bitField0_ = (bitField0_ & ~0x00000400);
      serverKey_ = getDefaultInstance().getServerKey();
    }

    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * A client-side payment channel in serialized form, which can be reloaded later if the client restarts and wants to
     * reopen an existing channel
     * </pre>
     *
     * Protobuf type {@code paymentchannels.StoredClientPaymentChannel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel, Builder> implements
        // @@protoc_insertion_point(builder_implements:paymentchannels.StoredClientPaymentChannel)
        org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannelOrBuilder {
      // Construct using org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required bytes id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return instance.hasId();
      }
      /**
       * <code>required bytes id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getId() {
        return instance.getId();
      }
      /**
       * <code>required bytes id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <code>required bytes id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }

      /**
       * <code>required bytes contractTransaction = 2;</code>
       * @return Whether the contractTransaction field is set.
       */
      @java.lang.Override
      public boolean hasContractTransaction() {
        return instance.hasContractTransaction();
      }
      /**
       * <code>required bytes contractTransaction = 2;</code>
       * @return The contractTransaction.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getContractTransaction() {
        return instance.getContractTransaction();
      }
      /**
       * <code>required bytes contractTransaction = 2;</code>
       * @param value The contractTransaction to set.
       * @return This builder for chaining.
       */
      public Builder setContractTransaction(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setContractTransaction(value);
        return this;
      }
      /**
       * <code>required bytes contractTransaction = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearContractTransaction() {
        copyOnWrite();
        instance.clearContractTransaction();
        return this;
      }

      /**
       * <code>required bytes refundTransaction = 3;</code>
       * @return Whether the refundTransaction field is set.
       */
      @java.lang.Override
      public boolean hasRefundTransaction() {
        return instance.hasRefundTransaction();
      }
      /**
       * <code>required bytes refundTransaction = 3;</code>
       * @return The refundTransaction.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getRefundTransaction() {
        return instance.getRefundTransaction();
      }
      /**
       * <code>required bytes refundTransaction = 3;</code>
       * @param value The refundTransaction to set.
       * @return This builder for chaining.
       */
      public Builder setRefundTransaction(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setRefundTransaction(value);
        return this;
      }
      /**
       * <code>required bytes refundTransaction = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRefundTransaction() {
        copyOnWrite();
        instance.clearRefundTransaction();
        return this;
      }

      /**
       * <code>required bytes myPublicKey = 8;</code>
       * @return Whether the myPublicKey field is set.
       */
      @java.lang.Override
      public boolean hasMyPublicKey() {
        return instance.hasMyPublicKey();
      }
      /**
       * <code>required bytes myPublicKey = 8;</code>
       * @return The myPublicKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMyPublicKey() {
        return instance.getMyPublicKey();
      }
      /**
       * <code>required bytes myPublicKey = 8;</code>
       * @param value The myPublicKey to set.
       * @return This builder for chaining.
       */
      public Builder setMyPublicKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMyPublicKey(value);
        return this;
      }
      /**
       * <code>required bytes myPublicKey = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMyPublicKey() {
        copyOnWrite();
        instance.clearMyPublicKey();
        return this;
      }

      /**
       * <pre>
       * Deprecated, key is already stored in the wallet, and found using myPublicKey;
       * </pre>
       *
       * <code>required bytes myKey = 4;</code>
       * @return Whether the myKey field is set.
       */
      @java.lang.Override
      public boolean hasMyKey() {
        return instance.hasMyKey();
      }
      /**
       * <pre>
       * Deprecated, key is already stored in the wallet, and found using myPublicKey;
       * </pre>
       *
       * <code>required bytes myKey = 4;</code>
       * @return The myKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMyKey() {
        return instance.getMyKey();
      }
      /**
       * <pre>
       * Deprecated, key is already stored in the wallet, and found using myPublicKey;
       * </pre>
       *
       * <code>required bytes myKey = 4;</code>
       * @param value The myKey to set.
       * @return This builder for chaining.
       */
      public Builder setMyKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMyKey(value);
        return this;
      }
      /**
       * <pre>
       * Deprecated, key is already stored in the wallet, and found using myPublicKey;
       * </pre>
       *
       * <code>required bytes myKey = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMyKey() {
        copyOnWrite();
        instance.clearMyKey();
        return this;
      }

      /**
       * <code>required uint64 valueToMe = 5;</code>
       * @return Whether the valueToMe field is set.
       */
      @java.lang.Override
      public boolean hasValueToMe() {
        return instance.hasValueToMe();
      }
      /**
       * <code>required uint64 valueToMe = 5;</code>
       * @return The valueToMe.
       */
      @java.lang.Override
      public long getValueToMe() {
        return instance.getValueToMe();
      }
      /**
       * <code>required uint64 valueToMe = 5;</code>
       * @param value The valueToMe to set.
       * @return This builder for chaining.
       */
      public Builder setValueToMe(long value) {
        copyOnWrite();
        instance.setValueToMe(value);
        return this;
      }
      /**
       * <code>required uint64 valueToMe = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearValueToMe() {
        copyOnWrite();
        instance.clearValueToMe();
        return this;
      }

      /**
       * <pre>
       * Fees required to refund the transaction.
       * </pre>
       *
       * <code>required uint64 refundFees = 6;</code>
       * @return Whether the refundFees field is set.
       */
      @java.lang.Override
      public boolean hasRefundFees() {
        return instance.hasRefundFees();
      }
      /**
       * <pre>
       * Fees required to refund the transaction.
       * </pre>
       *
       * <code>required uint64 refundFees = 6;</code>
       * @return The refundFees.
       */
      @java.lang.Override
      public long getRefundFees() {
        return instance.getRefundFees();
      }
      /**
       * <pre>
       * Fees required to refund the transaction.
       * </pre>
       *
       * <code>required uint64 refundFees = 6;</code>
       * @param value The refundFees to set.
       * @return This builder for chaining.
       */
      public Builder setRefundFees(long value) {
        copyOnWrite();
        instance.setRefundFees(value);
        return this;
      }
      /**
       * <pre>
       * Fees required to refund the transaction.
       * </pre>
       *
       * <code>required uint64 refundFees = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRefundFees() {
        copyOnWrite();
        instance.clearRefundFees();
        return this;
      }

      /**
       * <pre>
       * When set, the hash of the transaction that was presented by the server for closure of the channel.
       * It spends the contractTransaction and is expected to be broadcast to the network by the server.
       * It's supposed to be in the wallet already.
       * </pre>
       *
       * <code>optional bytes closeTransactionHash = 7;</code>
       * @return Whether the closeTransactionHash field is set.
       */
      @java.lang.Override
      public boolean hasCloseTransactionHash() {
        return instance.hasCloseTransactionHash();
      }
      /**
       * <pre>
       * When set, the hash of the transaction that was presented by the server for closure of the channel.
       * It spends the contractTransaction and is expected to be broadcast to the network by the server.
       * It's supposed to be in the wallet already.
       * </pre>
       *
       * <code>optional bytes closeTransactionHash = 7;</code>
       * @return The closeTransactionHash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCloseTransactionHash() {
        return instance.getCloseTransactionHash();
      }
      /**
       * <pre>
       * When set, the hash of the transaction that was presented by the server for closure of the channel.
       * It spends the contractTransaction and is expected to be broadcast to the network by the server.
       * It's supposed to be in the wallet already.
       * </pre>
       *
       * <code>optional bytes closeTransactionHash = 7;</code>
       * @param value The closeTransactionHash to set.
       * @return This builder for chaining.
       */
      public Builder setCloseTransactionHash(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCloseTransactionHash(value);
        return this;
      }
      /**
       * <pre>
       * When set, the hash of the transaction that was presented by the server for closure of the channel.
       * It spends the contractTransaction and is expected to be broadcast to the network by the server.
       * It's supposed to be in the wallet already.
       * </pre>
       *
       * <code>optional bytes closeTransactionHash = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCloseTransactionHash() {
        copyOnWrite();
        instance.clearCloseTransactionHash();
        return this;
      }

      /**
       * <code>optional uint32 majorVersion = 9 [default = 1];</code>
       * @return Whether the majorVersion field is set.
       */
      @java.lang.Override
      public boolean hasMajorVersion() {
        return instance.hasMajorVersion();
      }
      /**
       * <code>optional uint32 majorVersion = 9 [default = 1];</code>
       * @return The majorVersion.
       */
      @java.lang.Override
      public int getMajorVersion() {
        return instance.getMajorVersion();
      }
      /**
       * <code>optional uint32 majorVersion = 9 [default = 1];</code>
       * @param value The majorVersion to set.
       * @return This builder for chaining.
       */
      public Builder setMajorVersion(int value) {
        copyOnWrite();
        instance.setMajorVersion(value);
        return this;
      }
      /**
       * <code>optional uint32 majorVersion = 9 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearMajorVersion() {
        copyOnWrite();
        instance.clearMajorVersion();
        return this;
      }

      /**
       * <pre>
       * The expiry time of the CLTV lock. Only used in protocol v2.
       * </pre>
       *
       * <code>optional uint64 expiryTime = 10;</code>
       * @return Whether the expiryTime field is set.
       */
      @java.lang.Override
      public boolean hasExpiryTime() {
        return instance.hasExpiryTime();
      }
      /**
       * <pre>
       * The expiry time of the CLTV lock. Only used in protocol v2.
       * </pre>
       *
       * <code>optional uint64 expiryTime = 10;</code>
       * @return The expiryTime.
       */
      @java.lang.Override
      public long getExpiryTime() {
        return instance.getExpiryTime();
      }
      /**
       * <pre>
       * The expiry time of the CLTV lock. Only used in protocol v2.
       * </pre>
       *
       * <code>optional uint64 expiryTime = 10;</code>
       * @param value The expiryTime to set.
       * @return This builder for chaining.
       */
      public Builder setExpiryTime(long value) {
        copyOnWrite();
        instance.setExpiryTime(value);
        return this;
      }
      /**
       * <pre>
       * The expiry time of the CLTV lock. Only used in protocol v2.
       * </pre>
       *
       * <code>optional uint64 expiryTime = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearExpiryTime() {
        copyOnWrite();
        instance.clearExpiryTime();
        return this;
      }

      /**
       * <pre>
       * The server's public key. Only used in protocol v2.
       * </pre>
       *
       * <code>optional bytes serverKey = 11;</code>
       * @return Whether the serverKey field is set.
       */
      @java.lang.Override
      public boolean hasServerKey() {
        return instance.hasServerKey();
      }
      /**
       * <pre>
       * The server's public key. Only used in protocol v2.
       * </pre>
       *
       * <code>optional bytes serverKey = 11;</code>
       * @return The serverKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getServerKey() {
        return instance.getServerKey();
      }
      /**
       * <pre>
       * The server's public key. Only used in protocol v2.
       * </pre>
       *
       * <code>optional bytes serverKey = 11;</code>
       * @param value The serverKey to set.
       * @return This builder for chaining.
       */
      public Builder setServerKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setServerKey(value);
        return this;
      }
      /**
       * <pre>
       * The server's public key. Only used in protocol v2.
       * </pre>
       *
       * <code>optional bytes serverKey = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearServerKey() {
        copyOnWrite();
        instance.clearServerKey();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.StoredClientPaymentChannel)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "id_",
              "contractTransaction_",
              "refundTransaction_",
              "myKey_",
              "valueToMe_",
              "refundFees_",
              "closeTransactionHash_",
              "myPublicKey_",
              "majorVersion_",
              "expiryTime_",
              "serverKey_",
            };
            java.lang.String info =
                "\u0001\u000b\u0000\u0001\u0001\u000b\u000b\u0000\u0000\u0007\u0001\u150a\u0000\u0002" +
                "\u150a\u0001\u0003\u150a\u0002\u0004\u150a\u0004\u0005\u1503\u0005\u0006\u1503\u0006" +
                "\u0007\u100a\u0007\b\u150a\u0003\t\u100b\b\n\u1003\t\u000b\u100a\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel> parser = PARSER;
          if (parser == null) {
            synchronized (org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:paymentchannels.StoredClientPaymentChannel)
    private static final org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel DEFAULT_INSTANCE;
    static {
      StoredClientPaymentChannel defaultInstance = new StoredClientPaymentChannel();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        StoredClientPaymentChannel.class, defaultInstance);
    }

    public static org.bitcoinj.protocols.channels.ClientState.StoredClientPaymentChannel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StoredClientPaymentChannel> PARSER;

    public static com.google.protobuf.Parser<StoredClientPaymentChannel> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
